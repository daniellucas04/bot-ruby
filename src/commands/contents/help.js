const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageEmbed, MessageActionRow, MessageSelectMenu } = require('discord.js')

module.exports = {
    data: new SlashCommandBuilder()
    .setName('ajuda')
    .setDescription('Vou te ajudar a entender o que eu fa√ßo!'),

    async execute(interaction){
        const helpEmbed = new MessageEmbed()
        .setColor('RED')
        .setTitle('Precisando de ajuda?')
        .setDescription(`Ol√° <@${interaction.user.id}>, quer entender o que cada comando faz? Voc√™ est√° no lugar certo!`)
        .setTimestamp();

        const selectMenu = new MessageActionRow().addComponents(
            new MessageSelectMenu()
            .setCustomId('select-menu')
            .setPlaceholder('üî¥ Selecione uma categoria')
            .addOptions([
                {
                    label: 'In√≠cio',
                    description: 'Volte para a mensagem inicial',
                    emoji: 'üìç',
                    value:'initial',
                },
                {
                    label: 'Conte√∫dos',
                    description: 'Veja todos os comandos que remetem a conte√∫do',
                    emoji: 'üìö',
                    value:'contents',
                },
                {
                    label: 'Perguntas',
                    description: 'Veja todos os comandos de perguntas que est√£o dispon√≠veis',
                    emoji: '‚ùì',
                    value:'questions',
                },
            ]));
                
        await interaction.reply({embeds: [helpEmbed], components: [selectMenu], fetchReply: true }).then(msg =>{
            const filter = (i)=> i.isSelectMenu();
            const collector = msg.createMessageComponentCollector({ filter });
            collector.on('collect', async (collected) =>{
                let value = collected.values[0];
                collected.deferUpdate();
                if(value === 'initial'){
                        msg.edit({ embeds: [helpEmbed], components: [selectMenu] });
                    }
                    if(value === 'contents'){
                        let helpContents = new MessageEmbed()
                        .setColor('RED')
                        .setTitle('Comandos de conte√∫do')
                        .addFields([
                            {
                                name: '/introducao',
                                value: 'Este √© o pontap√© inicial, aqui voc√™ vai aprender o b√°sico sobre rede de computadores.', 
                            },
                            {
                                name: '/endereco-ip',
                                value: 'Neste t√≥pico ser√° abordado qual a fun√ß√£o e a estrutura b√°sica do t√£o conhecido endere√ßo IP.', 
                            },
                            {
                                name: '/endereco-mac',
                                value: 'Neste t√≥pico ser√° abordado o que √© o endere√ßo MAC que nossos dispsitivos possuem.', 
                            },
                            {
                                name: '/arquiteturas',
                                value: 'Neste t√≥pico ser√° abordado os modelos OSI e TCP/IP. Como funcionam na pr√°tica e uma breve explica√ß√£o sobre encapsulamento.', 
                            },
                            {
                                name: '/topologia',
                                value: 'Neste t√≥pico ser√° abordado algumas formas de como organizar e conectar uma rede local.', 
                            },
                            {
                                name: '/dhcp',
                                value: 'Neste t√≥pico ser√° abordado qual a fun√ß√£o do DHCP e o porque √© t√£o utilizado na √°rea de redes.', 
                            },
                        ])
                        msg.edit({ embeds: [helpContents], components: [selectMenu] });
                    };
                    if(value === 'questions'){
                        let helpQuestions = new MessageEmbed()
                        .setColor('RED')
                        .setTitle('Comandos de perguntas')
                        .addFields([
                            {
                                name: '/perguntas-introducao',
                                value: 'Exercite aquilo que foi estudado no t√≥pico de introdu√ß√£o'
                            },
                            {
                                name: '/perguntas-arquiteturas',
                                value: 'Exercite aquilo que foi estudado no t√≥pico de arquiteturas'
                            },
                            {
                                name: '/perguntas-topologia',
                                value: 'Exercite aquilo que foi estudado no t√≥pico de topologia'
                            }
                        ])
                        msg.edit({ embeds: [helpQuestions], components: [selectMenu] });
                    };
                })
            })    
        }
}